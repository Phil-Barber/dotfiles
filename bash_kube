#source <(kubectl completion bash) # Enable auto completion

alias k=kubectl
alias n=namespace

export KOPS_STATE_STORE=s3://lantum-kops
export NAME=k.lantum.com

export KUBE_EDITOR='vim'

use_uk_cluster() {
    k config use-context k.lantum.com
}

use_us_staging() {
    k config use-context us-1-2.staging.lantum.com
}

use_us_prod() {
    k config use-context us-1-2.lantum.com
}

get_context() {
    kubectl config current-context
}

get_namespace() {
 kubectl config view --minify --output 'jsonpath={..namespace}'
}

function logs {
    service=$1
    shift
    kubectl logs --tail=100 -f "deployment/$service" $@
}
function kbash {
    service=$(k get pods | grep $1 | grep Running | head -1 | cut -d ' ' -f1)
    echo "Executing bash on $service"
    shift
    kubectl exec "$service"  -it -- bash $@
}
function describe {
    service=$(k get pods | grep $1 | head -1 | cut -d ' ' -f1)
    echo "Executing describe on $service"
    k describe pod "$service"
}
function namespace {
    export DEPLOY_TO=$1
    kubectl config set-context $(kubectl config current-context) --namespace=$1
}
function build_docker_hub () {
  project=$1;
  suffix=$2;
  cd $project;
  tag=networklocum/$project:phil-barber-$suffix
  docker build -t $tag .;
  docker push $tag
  cd ..;
}
function kwatch {
    k get pods --watch | grep $1
}

function kimage {
    for service in $1
    do
        k describe deploy $service ${*:2} | grep Image | sed "1q;d"
    done
}

function forward {
    port=$2
    service=$(k get pods | grep $1 | head -1 | cut -d ' ' -f1)
    echo "Forwarding pod $service on port $port"
    kubectl port-forward "$service" $port
}
